---
AWSTemplateFormatVersion: 2010-09-09
Description: "This Cloudformation will delete VPC and update IAM password policy"
Mappings:
    AWSRegionAMIEC2:
        ap-northeast-1:
            AMZLN: ami-00a5245b4816c38e6
        ap-northeast-2:
            AMZLN: ami-00dc207f8ba6dc919
        ap-southeast-1:
            AMZLN: ami-05b3bcf7f311194b3
        ap-southeast-2:
            AMZLN: ami-02fd0b06f06d93dfc
        ap-south-1:
            AMZLN: ami-0ad42f4f66f6c1cc9
        ca-central-1:
            AMZLN: ami-07423fb63ea0a0930
        eu-central-1:
            AMZLN: ami-0cfbf4f6db41068ac
        eu-north-1:
            AMZLN: ami-86fe70f8
        eu-west-1:
            AMZLN: ami-08935252a36e25f85
        eu-west-2:
            AMZLN: ami-01419b804382064e4
        eu-west-3:
            AMZLN: ami-0dd7e7ed60da8fb83
        sa-east-1:
            AMZLN: ami-05145e0b28ad8e0b2
        us-east-1:
            AMZLN: ami-0080e4c5bc078760e
        us-east-2:
            AMZLN: ami-0cd3dfa4e37921605
        us-west-1:
            AMZLN: ami-0ec6517f6edbf8044
        us-west-2:
            AMZLN: ami-01e24be29428c15b2            
Resources:
    forceiampolicy: 
      Type: AWS::IAM::ManagedPolicy
      DeletionPolicy: Retain
      Properties: 
          ManagedPolicyName: "Force_MFA"
          Description: "This policy will force iam user to create MFA first. Without MFA user can not perform any operations."
          PolicyDocument: 
            Version: "2012-10-17"
            Statement: 
              - 
                Sid: "AllowViewAccountInfo"
                Effect: "Allow"
                Action: 
                  - "iam:GetAccountPasswordPolicy"
                  - "iam:GetAccountSummary"
                  - "iam:ListVirtualMFADevices"
                Resource: "*"
              - 
                Sid: "AllowManageOwnPasswords"
                Effect: "Allow"
                Action: 
                  - "iam:ChangePassword"
                  - "iam:GetUser"
                Resource: "arn:aws:iam::*:user/${aws:username}"             
              - 
                Sid: "AllowManageOwnAccessKeys"
                Effect: "Allow"
                Action: 
                  - "iam:CreateAccessKey"
                  - "iam:DeleteAccessKey"
                  - "iam:ListAccessKeys"
                  - "iam:UpdateAccessKey"
                Resource: "arn:aws:iam::*:user/${aws:username}"
              - 
                Sid: "AllowManageOwnSigningCertificates"
                Effect: "Allow"
                Action: 
                  - "iam:DeleteSigningCertificate"
                  - "iam:ListSigningCertificates"
                  - "iam:UpdateSigningCertificate"
                  - "iam:UploadSigningCertificate"
                Resource: "arn:aws:iam::*:user/${aws:username}"       
              - 
                Sid: "AllowManageOwnSSHPublicKeys"
                Effect: "Allow"
                Action: 
                  - "iam:DeleteSSHPublicKey"
                  - "iam:GetSSHPublicKey"
                  - "iam:ListSSHPublicKeys"
                  - "iam:UpdateSSHPublicKey"
                  - "iam:UploadSSHPublicKey"
                Resource: "arn:aws:iam::*:user/${aws:username}"         
              - 
                Sid: "AllowManageOwnGitCredentials"
                Effect: "Allow"
                Action: 
                  - "iam:CreateServiceSpecificCredential"
                  - "iam:DeleteServiceSpecificCredential"
                  - "iam:ListServiceSpecificCredentials"
                  - "iam:ResetServiceSpecificCredential"
                  - "iam:UpdateServiceSpecificCredential"
                Resource: "arn:aws:iam::*:user/${aws:username}"       
              - 
                Sid: "AllowManageOwnVirtualMFADevice"
                Effect: "Allow"
                Action: 
                  - "iam:CreateVirtualMFADevice"
                  - "iam:DeleteVirtualMFADevice"
                Resource: "arn:aws:iam::*:mfa/${aws:username}"
              - 
                Sid: "AllowManageOwnUserMFA"
                Effect: "Allow"
                Action: 
                  - "iam:DeactivateMFADevice"
                  - "iam:EnableMFADevice"
                  - "iam:ListMFADevices"
                  - "iam:ResyncMFADevice"
                Resource: "arn:aws:iam::*:user/${aws:username}"
              - 
                Sid: "DenyAllExceptListedIfNoMFA"
                Effect: "Deny"
                NotAction: 
                  - "iam:CreateVirtualMFADevice"
                  - "iam:EnableMFADevice"
                  - "iam:GetUser"
                  - "iam:ListMFADevices"
                  - "iam:ListVirtualMFADevices"
                  - "iam:ResyncMFADevice"
                  - "sts:GetSessionToken"
                Resource: "*"
                Condition: 
                    BoolIfExists: 
                        aws:MultiFactorAuthPresent: "false"                   
    demovpc:
        Type: "AWS::EC2::VPC"
        Properties:
            CidrBlock: "10.0.0.0/16"
            EnableDnsSupport: true
            EnableDnsHostnames: true
            Tags: 
              - 
                Key: "Name"
                Value: "demo-vpc"

    publicroutetable:
        Type: "AWS::EC2::RouteTable"
        Properties:
            VpcId: !Ref demovpc

    publicsubnet:
        Type: "AWS::EC2::Subnet"
        Properties:
            VpcId: !Ref demovpc
            CidrBlock: "10.0.0.0/24"
            MapPublicIpOnLaunch: true
            AvailabilityZone: !Select [ 0, !GetAZs '' ]

    subnetroutetableattach:
        Type: "AWS::EC2::SubnetRouteTableAssociation"
        Properties:
            SubnetId: !Ref publicsubnet
            RouteTableId: !Ref publicroutetable

    myinternetgateway:
        Type: "AWS::EC2::InternetGateway"
        
    InternetGatewayAttachment:
        DependsOn: myinternetgateway
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref myinternetgateway
            VpcId: !Ref demovpc

    addroute:
        Type: "AWS::EC2::Route"
        DependsOn: InternetGatewayAttachment
        Properties:
            RouteTableId: !Ref publicroutetable
            DestinationCidrBlock: "0.0.0.0/0"
            GatewayId: !Ref myinternetgateway

    iam6e6cd98:
        DependsOn: addroute
        Type: "AWS::IAM::Role"
        Properties:
            AssumeRolePolicyDocument: 
                Version: "2012-10-17"
                Statement: 
                  - 
                    Effect: "Allow"
                    Action: 
                      - "sts:AssumeRole"
                    Principal: 
                        Service: 
                          - "ec2.amazonaws.com"
            Path: '/managed/'
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/AdministratorAccess
                  
    iamb15974e:
        Type: "AWS::IAM::InstanceProfile"
        Properties:
            Roles:
                - Ref: iam6e6cd98

    myec2instance:   
        Type: "AWS::EC2::Instance"
        Properties:
            ImageId: !FindInMap 
                - AWSRegionAMIEC2
                - !Ref 'AWS::Region'
                - AMZLN
            InstanceType: "t2.micro"
            IamInstanceProfile: !Ref iamb15974e
            SubnetId: 
                Ref: publicsubnet
            Tags: 
            -   Key: "Name"
                Value: "Prerequistic-setup"
            UserData:
              Fn::Base64:
                !Sub |
                    #!/bin/bash                  
                    yum update -y
                    pip install awscli --upgrade --user
                    yum install git jq -y
                    git clone https://github.com/adnanmansuri44/remove-default-vpc.git
                    sh remove-default-vpc/remove_vpc.sh
                    sh remove-default-vpc/cloudtrailmaster.sh
                    aws iam  update-account-password-policy --minimum-password-length 14 --require-symbols --require-numbers --require-uppercase-characters --require-lowercase-characters --allow-users-to-change-password --max-password-age 90 --password-reuse-prevention 24 --hard-expiry
                    aws s3control put-public-access-block --account-id '${AWS::AccountId}' --public-access-block-configuration "BlockPublicAcls=true,IgnorePublicAcls=true,BlockPublicPolicy=true,RestrictPublicBuckets=true" --region '${AWS::Region}'